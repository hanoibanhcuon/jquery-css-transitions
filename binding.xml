<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl" xmlns:html="http://www.w3.org/1999/xhtml">
	<binding id="rule-watcher">
		<!--
		We could have one behavior for the initial state, and another behavior for class-change
		
		We can easily find the initial state because it will have the transition-property,
		but finding the destination state is much harder
		
		Or we can implement watches, listening for content modifications... 
		
		-->
		<implementation>
			<constructor>
			var el = this;
			
			//window.jQuery(window).load(function(){
			//	xblConsole.info(window.jQuery(el).data('transition-property'));
			//});
			
			//jQuery must already be loaded!!
			xblConsole.info("construct rule-watcher");
			
			
			
			//alert("construct " + this.nodeName)
			</constructor>
			<destructor>
			xblConsole.info("destruct rule-watcher");
			//var el = this;
			//xblConsole.info(window.jQuery(el).data('transition-property'));
			//alert("destruct " + this.nodeName)
			</destructor>
		</implementation>
		<content><html:b>Hello from my binding! </html:b><children/></content>
	</binding>
	<binding id="rule-watcher2">
		<implementation>
			<constructor>
			var el = this;
			xblConsole.info("construct rule-watcher2");
			//window.jQuery(window).load(function(){
			//	xblConsole.info(window.jQuery(el).data('transition-property'));
			//});
			
			//jQuery must already be loaded!!
			
			
			
			//alert("construct " + this.nodeName)
			</constructor>
			<destructor>
			var el = this;
			xblConsole.info("destruct rule-watcher2");
			//xblConsole.info(window.jQuery(el).data('transition-property'));
			//alert("destruct " + this.nodeName)
			</destructor>
		</implementation>
		<content><html:b>Goodbye from my binding! </html:b><children/></content>
	</binding>
</bindings>